[tool.poetry]
name = "GEP"
version = "2024.05"
description = "GDB Enhanced Prompt"
authors = ["Alan Li <61896187+lebr0nli@users.noreply.github.com>"]
readme = "README.md"
packages = [
    { include = "gdbinit-gep.py" },
]

[tool.poetry.dependencies]
python = "^3.8"
prompt-toolkit = "^3.0.43"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.4"
mypy = "^1.10.0"
types-gdb = "^12.1.4.20240408"
vermin = "^1.6.0"
pytest = "8.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = [
    "A", # flake8-builtins
    "E", # pycodestyle
    "F", # pyflakes
    "W", # pycodestyle
    "C4", # flake8-comprehensions
    "I", # isort
    "SLOT", # flake8-slots
    "FLY", # flynt
    "PGH", # pygrep-hooks
    "RET506", # flake8-return: superfluous-else-raise
    "RET507", # flake8-return: superfluous-else-continue
    "RET508", # flake8-return: superfluous-else-break
    "UP" # pyupgrade
]
ignore = [
    "E402", # Module level import not at top of file
    "E501" # Line too long
]

[tool.ruff.lint.isort]
known-third-party = ["gdb", "prompt_toolkit"]
force-single-line = true

[tool.mypy]
files = ["gdbinit-gep.py", "example/geprc.py"]
strict_optional = false
check_untyped_defs = true
allow_redefinition = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
show_error_context = true
pretty = true
show_error_codes = true

disable_error_code = [
    # https://github.com/python/mypy/issues/6232
    "assignment"
]